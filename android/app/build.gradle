plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.sairatec.selc"
    compileSdkVersion 34
    ndkVersion = "25.1.8937393"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.sairatec.selc"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode 3
        versionName "1.0.2"
        // Uncomment if you need multidex support
        multiDexEnabled true
    }

    signingConfigs {
        release {
            if (System.getenv()['CI']) { // CI=true is exported by Codemagic
                storeFile file(System.getenv()['CM_KEYSTORE'])
                storePassword System.getenv()['CM_KEYSTORE_PASSWORD']
                keyAlias System.getenv()['CM_KEY_ALIAS']
                keyPassword System.getenv()['CM_KEY_PASSWORD']
            } else if (System.getenv()['SHOREBIRD']) { // For Shorebird builds
                storeFile file(System.getenv()['SHOREBIRD_KEYSTORE_PATH'])
                storePassword System.getenv()['SHOREBIRD_KEYSTORE_PASSWORD']
                keyAlias System.getenv()['SHOREBIRD_KEY_ALIAS']
                keyPassword System.getenv()['SHOREBIRD_KEY_PASSWORD']
            } else {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            // Enable code shrinking, obfuscation, and optimization
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
        }
    }

}

flutter {
    source = "../.."
}
