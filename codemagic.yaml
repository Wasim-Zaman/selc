# workflows:
#   android-workflow:
#     name: Android Workflow
#     triggering:
#       events:
#         - push
#         - pull_request
#       branch_patterns:
#         - pattern: 'main'
#           include: true
#           source: true
#     max_build_duration: 60
#     environment:
#       flutter: stable
#       android_signing:
#         - selc
#       vars:
#         KEYSTORE_PATH: selc.jks
#         KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
#         KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#         KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#     scripts:
#       - name: Set up keystore
#         script: |
#           echo $KEYSTORE_PASSWORD | base64 --decode > $KEYSTORE_PATH
#           echo "storePassword=$KEYSTORE_PASSWORD" > key.properties
#           echo "keyPassword=$KEY_PASSWORD" >> key.properties
#           echo "keyAlias=$KEY_ALIAS" >> key.properties
#           echo "storeFile=$KEYSTORE_PATH" >> key.properties
#       - name: Set up local.properties
#         script: |
#           echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
#       - name: Get Flutter packages
#         script: |
#           flutter packages pub get
#       - name: Create .env file
#         script: |
#           echo "API_KEY=$API_KEY" > .env
#           echo "SECRET_TOKEN=$SECRET_TOKEN" >> .env
#       - name: Build AAB
#         script: |
#           flutter build appbundle --release --build-name=1.0.$BUILD_NUMBER --build-number=$BUILD_NUMBER
#     artifacts:
#       - build/**/outputs/**/*.aab
#     publishing:
#       google_play:
#         credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
#         track: internal


workflows:
  android-release-workflow:
    name: Android Release Workflow
    max_build_duration: 60
    environment:
      flutter: stable
      android_signing:
        - selc
      groups:
        - keystore_credentials
        - google_play_credentials  # Add this new group
        - app_secrets
      vars:
        PACKAGE_NAME: "com.sairatec.selc"  # Replace with your app's package name
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true
          source: true
    scripts:
      - name: Set up keystore
        script: |
          echo $CM_KEYSTORE | base64 --decode > $CM_BUILD_DIR/app/keystore.jks
          cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$CM_KEYSTORE_PASSWORD
          keyPassword=$CM_KEY_PASSWORD
          keyAlias=$CM_KEY_ALIAS
          storeFile=$CM_BUILD_DIR/app/keystore.jks
          EOF
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Create .env file
        script: |
          echo "ADMIN_PHONE_NUMBER=$ADMIN_PHONE_NUMBER" > .env
          echo "ADMIN_PASSWORD=$ADMIN_PASSWORD" >> .env
      - name: Flutter analyze
        script: |
          flutter analyze
      - name: Flutter test
        script: |
          flutter test
      - name: Build APK
        script: |
          flutter build apk --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
    publishing:
      email:
        recipients:
          - user@example.com
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
